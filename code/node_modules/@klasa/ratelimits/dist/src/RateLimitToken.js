"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RateLimitToken = void 0;
/**
 * Class that handles ratelimits for long running actions that may error.
 */
class RateLimitToken {
    /**
     * @param expires When this token expires.
     * @param revert The reject handler that restores the remaining to the RateLimit this is for.
     */
    constructor(expires, revert) {
        /**
         * If this token has been used.
         */
        this.#used = false;
        this.#expires = expires;
        this.#revert = revert;
    }
    /**
     * When this token expires.
     */
    #expires;
    /**
     * The reject handler that restores the remaining to the RateLimit this is for.
     */
    #revert;
    /**
     * If this token has been used.
     */
    #used;
    /**
     * Marks this token as used (for use when the underlying task completes successfully).
     */
    commit() {
        if (this.#used)
            throw new Error('Token has already been used.');
        this.#used = true;
    }
    /**
     * Marks this token as used and returns the token to the ratelimit (for use when the underlying task fails).
     */
    revert() {
        this.commit();
        if (Date.now() < this.#expires)
            this.#revert();
    }
}
exports.RateLimitToken = RateLimitToken;
//# sourceMappingURL=RateLimitToken.js.map