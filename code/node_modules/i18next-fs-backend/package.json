{
  "_from": "i18next-fs-backend@^1.0.7",
  "_id": "i18next-fs-backend@1.0.7",
  "_inBundle": false,
  "_integrity": "sha512-aAZ3rvshe1Zbl6JSCWrWWqbZS5JpmVNG+84YqLcgdYcm9uAxzw4xWxnA/a3044Nm2PKXE62CT+pIZjk7OEYtTw==",
  "_location": "/i18next-fs-backend",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "i18next-fs-backend@^1.0.7",
    "name": "i18next-fs-backend",
    "escapedName": "i18next-fs-backend",
    "rawSpec": "^1.0.7",
    "saveSpec": null,
    "fetchSpec": "^1.0.7"
  },
  "_requiredBy": [
    "/@scp/in17n"
  ],
  "_resolved": "https://registry.npmjs.org/i18next-fs-backend/-/i18next-fs-backend-1.0.7.tgz",
  "_shasum": "00ca4587e306f8948740408389dda73461a5d07f",
  "_spec": "i18next-fs-backend@^1.0.7",
  "_where": "/Users/colemccarson/Desktop/Bot/syrus-bot/code/node_modules/@scp/in17n",
  "bugs": {
    "url": "https://github.com/i18next/i18next-fs-backend/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "i18next-fs-backend is a backend layer for i18next using in Node.js and for Deno to load translations from the filesystem.",
  "devDependencies": {
    "@babel/cli": "7.10.4",
    "@babel/core": "7.10.4",
    "@babel/preset-env": "7.10.4",
    "babel-plugin-add-module-exports": "1.0.2",
    "eslint": "7.3.1",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.22.0",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.2.1",
    "eslint-plugin-require-path-exists": "1.1.9",
    "eslint-plugin-standard": "4.0.1",
    "expect.js": "0.3.1",
    "i18next": "19.5.2",
    "js-yaml": "3.14.0",
    "json5": "2.1.3",
    "mocha": "8.0.1",
    "uglify-js": "3.10.0"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "require": "./cjs/index.js",
      "default": "./esm/index.js"
    },
    "./cjs": {
      "default": "./cjs/index.js"
    },
    "./esm": {
      "default": "./esm/index.js"
    }
  },
  "homepage": "https://github.com/i18next/i18next-fs-backend",
  "keywords": [
    "i18next",
    "i18next-backend",
    "i18next-fs-backend"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/i18next/i18next-fs-backend/master/licence"
    }
  ],
  "main": "./cjs/index.js",
  "module": "./esm/index.js",
  "name": "i18next-fs-backend",
  "private": false,
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/i18next/i18next-fs-backend.git"
  },
  "scripts": {
    "build": "npm run compile",
    "compile": "npm run copy && npm run compile:esm && npm run compile:cjs",
    "compile:cjs": "rm -rf cjs && mkdir cjs && BABEL_ENV=cjs babel lib -d cjs && echo '{\"type\":\"commonjs\"}' > cjs/package.json && cp lib/fs.cjs cjs/fs.js && node -e \"fs.writeFileSync('cjs/readFile.js', fs.readFileSync('cjs/readFile.js').toString().replace('fs.cjs', 'fs.js'))\" && node -e \"fs.writeFileSync('cjs/writeFile.js', fs.readFileSync('cjs/writeFile.js').toString().replace('fs.cjs', 'fs.js'))\"",
    "compile:esm": "rm -rf esm && mkdir esm && BABEL_ENV=esm babel lib -d esm && cp lib/fs.cjs esm/fs.cjs",
    "copy": "rm -rf lib/formats && mkdir lib/formats && npm run copy:json5 && npm run copy:yaml",
    "copy:json5": "cp node_modules/json5/dist/index.mjs lib/formats/json5.js",
    "copy:yaml": "cp node_modules/js-yaml/dist/js-yaml.min.js lib/formats/yaml.js",
    "lint": "eslint .",
    "postversion": "git push && git push --tags",
    "preversion": "npm run test && npm run build && git push",
    "test": "npm run lint && npm run build && mocha test -R spec --exit --experimental-modules",
    "test:deno": "deno test test/deno/*.js --allow-read --allow-write"
  },
  "type": "module",
  "version": "1.0.7"
}
